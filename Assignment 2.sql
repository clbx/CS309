/*
CS309 - Database Systems
Assignment 2
Clay Buxton
*/

/* [26] */
SELECT 
	COUNT(*) 
FROM INVOICE;

/* [27] */
SELECT 
	COUNT(*) 

FROM CUSTOMER 
WHERE CUS_BALANCE > 500;

/* [28] */
SELECT 
	INVOICE.CUS_CODE, 
	INVOICE.INV_NUMBER, 
	INV_DATE, 
	PRODUCT.P_DESCRIPT,
	LINE_UNITS,
	LINE_PRICE

FROM CUSTOMER,INVOICE,LINE,PRODUCT

WHERE CUSTOMER.CUS_CODE = INVOICE.CUS_CODE
/* These set the keys to the same thing */
AND INVOICE.INV_NUMBER = LINE.INV_NUMBER
AND PRODUCT.P_CODE = LINE.P_CODE
ORDER BY INVOICE.CUS_CODE, INVOICE.INV_NUMBER, INVOICE.INV_DATE, PRODUCT.P_DESCRIPT,LINE.LINE_UNITS,
	 LINE.LINE_PRICE
;

/* [29] */
SELECT 
	INVOICE.CUS_CODE, 
	INVOICE.INV_NUMBER, 
	INV_DATE, 
	PRODUCT.P_DESCRIPT,
	LINE_UNITS AS "Units Bought",
	LINE_PRICE AS "Unit Price",
	ROUND(LINE_UNITS * LINE_PRICE,2) AS "Subtotal"

FROM CUSTOMER,INVOICE,LINE,PRODUCT

WHERE CUSTOMER.CUS_CODE = INVOICE.CUS_CODE
/* These set the keys to the same thing */
AND INVOICE.INV_NUMBER = LINE.INV_NUMBER
AND PRODUCT.P_CODE = LINE.P_CODE
ORDER BY INVOICE.CUS_CODE, INVOICE.INV_NUMBER, INVOICE.INV_DATE, PRODUCT.P_DESCRIPT,LINE.LINE_UNITS,
	LINE.LINE_PRICE
;


/* [30] */
SELECT 
	INVOICE.CUS_CODE, 
	CUSTOMER.CUS_BALANCE,
	/* This sums the elements from those rows, then rounds it */
	Round(Sum(LINE.LINE_UNITS * LINE.LINE_PRICE),2) AS "Total Purchases"

FROM CUSTOMER, INVOICE, LINE

WHERE CUSTOMER.CUS_CODE = INVOICE.CUS_CODE
AND INVOICE.INV_NUMBER = LINE.INV_NUMBER
GROUP BY INVOICE.CUS_CODE, CUSTOMER.CUS_BALANCE
ORDER BY INVOICE.CUS_CODE
;

/* [31] */
SELECT 
	INVOICE.CUS_CODE, 
	CUSTOMER.CUS_BALANCE,
        /* This sums the elements from those rows, then rounds it */
        Round(Sum(LINE.LINE_UNITS * LINE.LINE_PRICE),2) AS "Total Purchases",
	Count(LINE.LINE_NUMBER) AS "Number of Purchases"

FROM CUSTOMER, INVOICE, LINE

WHERE CUSTOMER.CUS_CODE = INVOICE.CUS_CODE
AND INVOICE.INV_NUMBER = LINE.INV_NUMBER
GROUP BY INVOICE.CUS_CODE, CUSTOMER.CUS_BALANCE
ORDER BY INVOICE.CUS_CODE
;


/* [32] */

SELECT 
	INVOICE.CUS_CODE, 
	CUSTOMER.CUS_BALANCE,
        /* This sums the elements from those rows, then rounds it */
        Round(Sum(LINE.LINE_UNITS * LINE.LINE_PRICE),2) AS "Total Purchases",
        Count(LINE.LINE_NUMBER) AS "Number of Purchases",
	Round((Sum(LINE.LINE_UNITS * LINE.LINE_PRICE) / Count(LINE.LINE_NUMBER)),2) AS "Average Purchase Amount"

FROM CUSTOMER, INVOICE, LINE

WHERE CUSTOMER.CUS_CODE = INVOICE.CUS_CODE
AND INVOICE.INV_NUMBER = LINE.INV_NUMBER
GROUP BY INVOICE.CUS_CODE, CUSTOMER.CUS_BALANCE
ORDER BY INVOICE.CUS_CODE
;


/* [33] */

SELECT       
        INVOICE.INV_NUMBER,
        Round(Sum(LINE.LINE_UNITS * LINE.LINE_PRICE),2) AS "Invoice Total"

FROM INVOICE, LINE

WHERE INVOICE.INV_NUMBER = LINE.INV_NUMBER
GROUP BY INVOICE.INV_NUMBER
ORDER BY INVOICE.INV_NUMBER
;


/* [34]*/
SELECT 
	INVOICE.CUS_CODE,
	INVOICE.INV_NUMBER,
	Round(Sum(LINE.LINE_UNITS * LINE.LINE_PRICE),2) AS "Invoice Total"

FROM INVOICE, LINE

WHERE INVOICE.INV_NUMBER = LINE.INV_NUMBER
GROUP BY INVOICE.INV_NUMBER
ORDER BY INVOICE.CUS_CODE, INVOICE.INV_NUMBER
;



/* [35] */

SELECT 
	INVOICE.CUS_CODE,
	Count(DISTINCT INVOICE.INV_NUMBER) AS "Number of Invoices",
	Round(Sum(LINE.LINE_PRICE * LINE.LINE_UNITS),2) AS "Total Customer Purchases" 

FROM INVOICE, LINE

WHERE INVOICE.INV_NUMBER = LINE.INV_NUMBER
GROUP BY INVOICE.CUS_CODE
ORDER BY INVOICE.CUS_CODE

;



/* [36] */
SELECT
	Sum(INVOICE_COUNT) AS "Total Invoices",
	Round(Sum(TOTAL_PURCHASE),2) AS "Total Sales",
	Round(Min(TOTAL_PURCHASE),2) AS "Minimum Customer Purchases",
	Round(Max(TOTAL_PURCHASE),2) AS "Largest Customer Purchases",
	Round(Avg(TOTAL_PURCHASE),2) AS "Average Customer Purchases"

FROM(
	SELECT 
	INVOICE.CUS_CODE,
	Count(DISTINCT INVOICE.INV_NUMBER) AS INVOICE_COUNT,
	Round(Sum(LINE.LINE_PRICE * LINE.LINE_UNITS),2) AS TOTAL_PURCHASE 

	FROM INVOICE, LINE

	WHERE INVOICE.INV_NUMBER = LINE.INV_NUMBER
	GROUP BY INVOICE.CUS_CODE
	ORDER BY INVOICE.CUS_CODE
) as TD

;

/* [37] */
SELECT
	CUS_CODE,
	CUS_BALANCE
FROM CUSTOMER
WHERE CUSTOMER.CUS_CODE IN(SELECT CUS_CODE FROM INVOICE)
ORDER BY CUS_CODE

;

/* [38] */
SELECT
	Round(Min(CUS_BALANCE),2) AS "Minimum Balance",
	Round(Max(CUS_BALANCE),2) AS "Maximum Balance",
	Round(Avg(CUS_BALANCE),2) AS "Average Balance"

FROM CUSTOMER
WHERE CUSTOMER.CUS_CODE IN(SELECT CUS_CODE FROM INVOICE)
;

/* [39] */
SELECT
	Round(Sum(CUS_BALANCE),2) AS "Total Balances",
	Round(Min(CUS_BALANCE),2) AS "Minimum Balance",
	Round(Max(CUS_BALANCE),2) AS "Maximum Balance",
	Round(Avg(CUS_BALANCE),2) AS "Average Balance"

FROM CUSTOMER
;

/* [40] */

SELECT
	CUS_CODE,
	CUS_BALANCE
FROM CUSTOMER
WHERE CUSTOMER.CUS_CODE NOT IN(SELECT CUS_CODE FROM INVOICE)
ORDER BY CUS_CODE
;

/* [41] */
SELECT
	Round(Sum(CUS_BALANCE),2) AS "Total Balances",
	Round(Min(CUS_BALANCE),2) AS "Minimum Balance",
	Round(Max(CUS_BALANCE),2) AS "Maximum Balance",
	Round(Avg(CUS_BALANCE),2) AS "Avergae Balance"

FROM CUSTOMER
WHERE CUSTOMER.CUS_CODE NOT IN(SELECT CUS_CODE FROM INVOICE)

;

/* [42] */

SELECT
	P_DESCRIPT,
	P_QOH,
	P_PRICE,
	Round((P_QOH * P_PRICE),2) AS "Subtotal"

FROM PRODUCT
ORDER BY (P_QOH * P_PRICE) DESC

;



/* 43 */
SELECT
	Round(Sum(P_QOH*P_PRICE),2) AS "Total Value of Inventory"
FROM PRODUCT

;
